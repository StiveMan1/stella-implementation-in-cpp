language core;

fn logic_and_op(n : Nat) {
 return if true or false then (if true and not(true) then 0 else n + n) else n * n;
}

fn main(n : Nat) -> Nat {
  return let m = logic_and_op(n) in
  if (m > n) then (
    if (m > n) then (
      if (m >= n) then (
        if (n < m) then (
          if (n <= m) then (
            if (n != m) then (
              if (n != m) then 0 else succ(0)
            ) else 0
          ) else 0
        ) else 0
      ) else 0
    ) else 0
  ) else 0;
}
